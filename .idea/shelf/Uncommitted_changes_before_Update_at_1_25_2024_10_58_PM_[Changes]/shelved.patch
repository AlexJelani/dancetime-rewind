Index: app/dances.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect, useState} from 'react';\r\nimport {Image, StatusBar, Text, TouchableOpacity, View,} from 'react-native';\r\nimport {useLocalSearchParams, useRouter} from 'expo-router';\r\nimport {fetchExercisesByBodypart} from '../api/exerciseDB';\r\nimport {demoExercises} from \"../constants\";\r\nimport {heightPercentageToDP as hp, widthPercentageToDP as wp} from 'react-native-responsive-screen';\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport DanceList from \"../components/DanceList\";\r\nimport {ScrollView} from \"react-native-virtualized-view\";\r\nimport { ImageSourcePropType } from 'react-native';\r\n\r\n\r\n\r\nexport default function dances() {\r\n    const router = useRouter();\r\n    const [dances, setDances] = useState(demoExercises);\r\n    const item = useLocalSearchParams();\r\n    console.log('item.image:', item?.image);\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            // getExercisesxercises(item.name);\r\n        }\r\n    }, [item]);\r\n\r\n    const getDances = async (bodypart) => {\r\n            let data = await fetchExercisesByBodypart(bodypart);\r\n            // console.log('got data', data);\r\n        setDances(data)\r\n    };\r\n\r\n    const {name, image} = item;\r\n    // Check if the image is a URI or a number and create the appropriate source\r\n\r\n    return (\r\n        <ScrollView>\r\n                <StatusBar style=\"light\" />\r\n                <Image\r\n                    source={image}\r\n                    style={{ width: wp(100), height: hp(45) }}\r\n                    className=\"rounded-b-[40px]\"\r\n                />\r\n            <TouchableOpacity\r\n                onPress={()=> router.back()}\r\n                className=\"bg-rose-500 mx-4 absolute flex justify-center items-center pr-1 rounded-full\"\r\n                style={{height:hp(5.5), width:hp(5.5), marginTop:hp(7)}}\r\n            >\r\n                <Ionicons name=\"caret-back-outline\" size={hp(4)} color=\"white\" />\r\n            </TouchableOpacity>\r\n            {/*dances*/}\r\n            <View className=\"mx-4 space-y-3 mt-4\">\r\n                <Text style={{fontSize:hp(3)}} className=\"font-semibold text-neutral-700\">\r\n                    {name} dances\r\n                </Text>\r\n                <View className=\"mb-18\">\r\n                    <DanceList data={dances} />\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/dances.jsx b/app/dances.jsx
--- a/app/dances.jsx	(revision 57c4368d38fde2eb518efae397585fd19a7aee0b)
+++ b/app/dances.jsx	(date 1706190999948)
@@ -7,14 +7,21 @@
 import Ionicons from "react-native-vector-icons/Ionicons";
 import DanceList from "../components/DanceList";
 import {ScrollView} from "react-native-virtualized-view";
-import { ImageSourcePropType } from 'react-native';
+import { LogBox } from 'react-native';
 
+// Define the type for the item object
+interface ItemType {
+    name: string;
+    image: number ; // Adjust the type accordingly
+}
+// Add the following line to disable the specific warning
+LogBox.ignoreLogs(['Warning: Failed prop type']);
 
 
 export default function dances() {
     const router = useRouter();
     const [dances, setDances] = useState(demoExercises);
-    const item = useLocalSearchParams();
+    const item: ItemType = useLocalSearchParams();
     console.log('item.image:', item?.image);
 
     useEffect(() => {
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\r\n\r\n# dependencies\r\nnode_modules/\r\n\r\n# Expo\r\n.expo/\r\ndist/\r\nweb-build/\r\n\r\n# Native\r\n*.orig.*\r\n*.jks\r\n*.p8\r\n*.p12\r\n*.key\r\n*.mobileprovision\r\n\r\n# Metro\r\n.metro-health-check*\r\n\r\n# debug\r\nnpm-debug.*\r\nyarn-debug.*\r\nyarn-error.*\r\n\r\n# macOS\r\n.DS_Store\r\n*.pem\r\n\r\n# local env files\r\n.env*.local\r\n\r\n# typescript\r\n*.tsbuildinfo\r\n\r\n# @generated expo-cli sync-2b81b286409207a5da26e14c78851eb30d8ccbdb\r\n# The following patterns were generated by expo-cli\r\n\r\nexpo-env.d.ts\r\n# @end expo-cli\r\n/.idea/.gitignore\r\n/.idea/Fitness-app-exp.iml\r\n/.idea/modules.xml\r\n/patches/react-native+0.72.6.patch\r\n/.idea/vcs.xml\r\n/.idea/dancetime-rewind.iml\r\n/.idea/workspace.xml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 57c4368d38fde2eb518efae397585fd19a7aee0b)
+++ b/.gitignore	(date 1706191000122)
@@ -46,3 +46,4 @@
 /.idea/vcs.xml
 /.idea/dancetime-rewind.iml
 /.idea/workspace.xml
+/.idea/misc.xml
